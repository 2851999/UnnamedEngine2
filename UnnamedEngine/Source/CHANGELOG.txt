--------------------------------------------------------------
Release 2 | Beta 2 | Development 2 (V0.5.2)

* Added VulkanBufferObject
* Added parameters in the constructor of Light to allow the
  shadow map range for directional lights to be configured

* Changed basic PBR lighting so that the amount of ambient
  lighting can be controlled by RenderScene
* Changed VBO to assume the VulkanBufferObject should be
  updatable when usage is anything other than
  DataUsage::STATIC
* Changed UBO to use DataUsage instead of the OpenGL usage
* Changed UBO to use VulkanBufferObject

* Removed VBOUsage enum and replaced with DataUsage

* Fixed bug: 'initOrthographic' in Matrix4f was incorrect for
              use with Vulkan
* Fixed bug: Multiple point light shadows would cause
             flickering when using Vulkan
* Fixed bug: Updating a VBO could cause problems in Vulkan
             with multiple fames in flight
* Fixed bug: Occasional flickering rendering a
             ParticleSystem when multiple frames in flight

* Some cleanup of Renderer

-------------------------------------------------------------
Release 2 | Beta 2 | Development 1 | Experimental 6

* Changed UBO to use DataUsage instead of the OpenGL usage
* Changed UBO to use VulkanBufferObject

* Removed UBO update queue in Vulkan

* Fixed bug: Occasional flickering rendering a
             ParticleSystem when multiple frames in flight

-------------------------------------------------------------
Release 2 | Beta 2 | Development 1 | Experimental 5

* Changed VBO to assume the VulkanBufferObject should be
  updatable when usage is anything other than
  DataUsage::STATIC

* Removed VBOUsage enum and replaced with DataUsage

-------------------------------------------------------------
Release 2 | Beta 2 | Development 1 | Experimental 4

* Added VulkanBufferObject

* Fixed bug: Updating a VBO could cause problems in Vulkan
             with multiple fames in flight

* Some cleanup of previous commit

-------------------------------------------------------------
Release 2 | Beta 2 | Development 1 | Experimental 3

* Fixing bug: Updating a VBO could cause problems in Vulkan
              with multiple fames in flight

-------------------------------------------------------------
Release 2 | Beta 2 | Development 1 | Experimental 2

* Fixed bug: Multiple point light shadows would cause
             flickering when using Vulkan

-------------------------------------------------------------
Release 2 | Beta 2 | Development 1 | Experimental 1

* Added parameters in the constructor of Light to allow the
  shadow map range for directional lights to be configured

* Changed basic PBR lighting so that the amount of ambient
  lighting can be controlled by RenderScene

* Fixed bug: 'initOrthographic' in Matrix4f was incorrect for
              use with Vulkan

* Some cleanup of Renderer

--------------------------------------------------------------
Release 2 | Beta 2 | Development 1 (V0.5.1)

* Added billboarded SDF text rendering in Font/Text
* Added parameters that can be changed to customise SDF text
  rendering using a Font instance

* Readded PBREnvironment
* Readded PBRTest
* Readded IBL in RenderScene (OpenGL only)
* Readded billboarded text rendering in Font/Text

* Renamed shader EquiToCubeGen to GenEquiToCube
* Renamed shader BRDFIntegrationMapGen to
  GenBRDFIntegrationMap
* Renamed shader IrradianceMapGen to GenIrradianceMap 
* Renamed shader PrefilterMapGen to GenPrefilterMap

* Removed ShaderInterface::BLOCK_ constants

* Fixed bug: SSR was calculated incorrectly compared to
             OpenGL
* Fixed bug: GRAPHICS_PIPELINE_DEFERRED_PBR_SSR had the wrong
             colour blend state
* Fixed bug: 'Font::destroy' was never called

-------------------------------------------------------------
Release 2 | Beta 2 | Development 0 | Experimental 4

* Added billboarded SDF text rendering in Font/Text

* Readded billboarded text rendering in Font/Text

* Removed 'destroy' method in Resource's

* Fixed bug: VulkanSwapChain incorrectly assigned the VSync
             setting after supported modes are checked in
			 the case of tripple buffering

-------------------------------------------------------------
Release 2 | Beta 2 | Development 0 | Experimental 3

* Added parameters that can be changed to customise SDF text
  rendering using a Font instance

* Removed ShaderInterface::BLOCK_ constants

* Fixed bug: 'Font::destroy' was never called

-------------------------------------------------------------
Release 2 | Beta 2 | Development 0 | Experimental 2

* Fixed bug: SSR was calculated incorrectly compared to
             OpenGL
* Fixed bug: GRAPHICS_PIPELINE_DEFERRED_PBR_SSR had the wrong
             colour blend state

-------------------------------------------------------------
Release 2 | Beta 2 | Development 0 | Experimental 1

* Readded PBREnvironment
* Readded PBRTest
* Readded IBL in RenderScene (OpenGL only)

* Renamed shader EquiToCubeGen to GenEquiToCube
* Renamed shader BRDFIntegrationMapGen to
  GenBRDFIntegrationMap
* Renamed shader IrradianceMapGen to GenIrradianceMap 
* Renamed shader PrefilterMapGen to GenPrefilterMap

--------------------------------------------------------------
Release 2 | Beta 2 (V0.5.0)

* Began major rewrite of rendering system to integrate
  Vulkan better. This will involve temporary removal of many
  classes and features, eventually re-adding them later

* Added DescriptorSet
* Added DescriptorSetLayout
* Added GraphicsPipeline
* Added GraphicsPipelineLayout
* Added utils_vulkan
* Added RenderPass
* Added Framebuffer
* Added basic support for layout(set) for Vulkan in shaders
  (Removed when using OpenGL)
* Added 'renderOffscreen' method in BaseEngine
* Added 'useView' method for Camera which should be used
  when things should be rendered according to that camera's
  point of view
* Added support for arrays of textures in Vulkan
* Added parameters in Shader methods to append "#define NAME"
  to the beginning of shaders before compilation when using
  Vulkan or OpenGL
* Added Vulkan support to most things
* Added basic SDF font support
* Added VBOUsage enum class to specify the usage of VBO's
* Added 'clearDefaultDepthBufferOnLoad' in VulkanSwapChain
  to allow depth information to be loaded when rendering to
  the default depth buffer instead of cleared
* Added 'samples' parameter in FramebufferAttachment
* Added FramebufferAttachmentInfo struct that is taken in
  FBO constructor instead of FramebufferAttachment*
* Added generalised enums for various TextureParameters

* Changed shaders to use separate UBO for per-model data and
  added a descriptor set for this
* Changed Light to extend Camera3D instead of GameObject3D
* Changed GUITextBox to improve default text rendering
  performance
* Changed GUIComponentRenderer to improve rendering
  performance

* Moved RenderShader to a different file
* Moved 'swapChainFramebuffers' from VulkanRenderPass to
  VulkanSwapChain

* Renamed ShaderBlock_Lighting struct to
  ShaderBlock_LightBatch in ShaderInterface
* Renamed ShaderBlock_Core struct to ShaderBlock_Camera in
  ShaderInterface
* Renamed FramebufferStore to FramebufferAttachment
* Renamed shader LightingDeferredGeom to
  DeferredLightingGeometry
* Renamed shader TerrainDeferredGeom to
  DeferredTerrainGeometry
* Renamed 'clamp' to 'addressMode' in TextureParameters

* Replaced TextureSet with DescriptorSet in Material
* Replaced include guards with '#pragma once'

* Replaced SHADER_VULKAN_LIGHTING with SHADER_LIGHTING
* Replaced SHADER_VULKAN_LIGHTING_SKINNING with
  SHADER_LIGHTING_SKINNING

* Rewrote FBO

* Removed FramebufferTest3D
* Removed PBRTest
* Removed SurfaceTest
* Removed PBREnvironment
* Removed PostProcessing
* Removed VulkanGraphicsPipeline
* Removed GraphicsState
* Removed TextureSet
* Removed GeometryBuffer
* Removed VulkanRenderPass
* Removed examples folder
* Removed IBL and Bloom for the time being

* Fixed bug: Font did not transition the texture it uses to
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL when
             using Vulkan
* Fixed bug: Fullscreen windows using vsync was capped to
             60Hz even when a higher refresh rate monitor
			 was used
* Fixed bug: Crash when trying to render an object without
             indices when using Vulkan
* Fixed bug: MSAA would not work when using Vulkan
* Fixed bug: Defines added to shaders were added many times
* Fixed bug: Camera's 'useView' method would fail in Vulkan
             unless a graphics pipeline was bound
* Fixed bug: Loading a '.model' file caused the creation of
             a Material that was never deleted

* Some cleanup

* Note: Now require a pipeline to render anything in Vulkan/
        OpenGL
* Note: SSR is incorrect when using Vulkan

* Some cleanup

--------------------------------------------------------------
Release 2 | Beta 1 | Development 8 (V0.5.0)

* Added instancing support to RenderData (Vulkan)
* Added ability to render different primitive topologies
  in Vulkan
* Added Terrain support to RenderScene
* Added deferred terrain rendering support to RenderScene
* Added generalised enums for various TextureParameters

* Readded SSR (Vulkan not working)
* Readded BaseTest3D
* Readded PhysicsTest3D
* Readded BaseEngineTest2D
* Readded Tilemap
* Readded BaseEngineTest3D
* Readded ParticleEffect
* Readded ParticleEmitter
* Readded ParticleSystem
* Readded TerrainTest
* Readded CDLODTerrain

* Changed Renderer to only create GraphicsPipelineLayout
  instances if needed
* Changed RenderScene to organise like objects into
  'ObjectBatches' to organise pipeline binding
* Changed FBO to assign the same TextureParameters when
  using Vulkan as when using OpenGL

* Renamed shader TerrainDeferredGeom to
  DeferredTerrainGeometry
* Renamed 'clamp' to 'addressMode' in TextureParameters

* Fixed bug: Depth information was not copied to the default
             buffer when using deferred rendering with
			 post processsing off (OpenGL)
* Fixed bug: Updating a camera once would cause issues when
             using Vulkan
* Fixed bug: RenderScene with lighting disabled caused a
             crash
* Fixed bug: Sprite did not update material's so no textures
             would render
* Fixed bug: Loading a '.model' file caused the creation of
             a Material that was never deleted
* Fixed bug: Camera did not bind its descriptor set when
             rendering causing problems if rendering a
			 skybox independently

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 8

* Added deferred terrain rendering support to RenderScene
* Added generalised enums for various TextureParameters

* Changed FBO to assign the same TextureParameters when
  using Vulkan as when using OpenGL

* Renamed shader TerrainDeferredGeom to
  DeferredTerrainGeometry
* Renamed 'clamp' to 'addressMode' in TextureParameters

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 7

* Added Terrain support to RenderScene

* Readded TerrainTest
* Readded CDLODTerrain

* Fixed bug: Camera did not bind its descriptor set when
             rendering causing problems if rendering a
			 skybox independently

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 6

* Changed RenderScene to organise like objects into
  'ObjectBatches' to organise pipeline binding

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 5

* Added instancing support to RenderData
* Added ability to render different primitive topologies
  in Vulkan

* Readded BaseEngineTest3D
* Readded ParticleEffect
* Readded ParticleEmitter
* Readded ParticleSystem

* Fixed bug: Loading a '.model' file caused the creation of
             a Material that was never deleted

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 4

* Readded Tilemap

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 3

* Readded BaseEngineTest2D

* Fixed bug: Sprite did not update material's so no textures
             would render

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 2

* Readded BaseTest3D
* Readded PhysicsTest3D

* Fixed bug: RenderScene with lighting disabled caused a
             crash

-------------------------------------------------------------
Release 2 | Beta 1 | Development 7 | Experimental 1

* Readded SSR (Vulkan not working)

* Changed Renderer to only create GraphicsPipelineLayout
  instances if needed

* Fixed bug: Depth information was not copied to the default
             buffer when using deferred rendering with
			 post processsing off (OpenGL)
* Fixed bug: Updating a camera once would cause issues when
             using Vulkan

--------------------------------------------------------------
Release 2 | Beta 1 | Development 7 (V0.4.9)

* Added 'setPostProcessingParameters' method in RenderScene
* Added 'clearDefaultDepthBufferOnLoad' in VulkanSwapChain
  to allow depth information to be loaded when rendering to
  the default depth buffer instead of cleared
* Added 'samples' parameter in FramebufferAttachment
* Added FramebufferAttachmentInfo struct that is taken in
  FBO constructor instead of FramebufferAttachment*

* Readded deferred lighting
* Readded post processing

* Changed GUITextBox to improve default text rendering
  performance
* Changed GUIComponentRenderer to improve rendering
  performance

* Renamed shader LightingDeferredGeom to
  DeferredLightingGeometry

* Fixed bug: RenderPass did not adjust front face when the
             viewport was not flipped, causing shadow mapping
			 to be incorrect when using Vulkan
* Fixed bug: 'updateDescriptorSet' was called at the
             incorrect time in BaseEngine causing descriptor
			 sets to be updated while being used
* Fixed bug: GUITextBoxCursor would cause descriptor sets
             to be updated while being used

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 7

* Changed GUITextBox to improve default text rendering
  performance
* Changed GUIComponentRenderer to improve rendering
  performance

* Fixed bug: 'updateDescriptorSet' was called at the
             incorrect time in BaseEngine causing descriptor
			 sets to be updated while being used
* Fixed bug: GUITextBoxCursor would cause descriptor sets
             to be updated while being used

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 6

* Changed render scene to output all depth information to
  the default depth buffer in the case of using post
  processing/deferred rendering

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 5

* Added 'clearDefaultDepthBufferOnLoad' in VulkanSwapChain
  to allow depth information to be loaded when rendering to
  the default depth buffer instead of cleared
* Added 'samples' parameter in FramebufferAttachment
* Added FramebufferAttachmentInfo struct that is taken in
  FBO constructor instead of FramebufferAttachment*
* Readded skybox support for RenderScene when post
  processing only

* Changed VulkanSwapChain to use FramebufferAttachment to
  handle the depth buffer

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 4

* Added post processing support for deferred lighting

* Changed Camera3D to only render it's skybox when 'render'
  is called instead of 'useView'

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 3

* Added skinning support for deferred lighting
* Added basic pbr support for deferred lighting

* Renamed shader LightingDeferredGeom to
  DeferredLightingGeometry

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 2

* Started readding deferred lighting

-------------------------------------------------------------
Release 2 | Beta 1 | Development 6 | Experimental 1

* Added 'setPostProcessingParameters' method in RenderScene

* Fixed bug: RenderPass did not adjust front face when the
             viewport was not flipped, causing shadow mapping
			 to be incorrect when using Vulkan

--------------------------------------------------------------
Release 2 | Beta 1 | Development 6 (V0.4.8)

* Added queued graphics pipeline system to speed up GUI
  rendering and reduce the number of pipelines created
* Added VBOUsage enum class to specify the usage of VBO's
* Added ability to configure culling within GraphicsPipeline

* Readded gamma correction, FXAA and exposure mapping
  post processing in RenderScene (unfinished)

* Massively improved text updating speed for Vulkan

* Fixed bug: Crash when a multiple of 6 lights in
             RenderScene
* Fixed bug: Font would sometimes render incorrectly
* Fixed bug: 'updateDescriptorSet' in Vulkan was incorrect
             causing descriptor sets to be updated while
			 being used

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 9

* Fixed bug: 'updateDescriptorSet' in Vulkan was incorrect
             causing descriptor sets to be updated while
			 being used

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 8

* Readded gamma correction, FXAA and exposure mapping
  post processing in RenderScene (unfinished)

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 7

* Fixed bug: Font would sometimes render incorrectly

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 6

* Managed to readd code from Experimental 3 without crash
  from Assimp by updating Assimp

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 5

* Fixed bug: Crash when a multiple of 6 lights in
             RenderScene

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 4

* Fixed bug: Previous commit caused crash, somehow in
             Assimp

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 3

* Added ability to configure culling within GraphicsPipeline

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 2

* Added VBOUsage enum class to specify the usage of VBO's

* Massively improved text updating speed for Vulkan

-------------------------------------------------------------
Release 2 | Beta 1 | Development 5 | Experimental 1

* Added queued graphics pipeline system to speed up GUI
  rendering and reduce the number of pipelines created

--------------------------------------------------------------
Release 2 | Beta 1 | Development 5 (V0.4.7)

* Added geometry shader support for Vulkan
* Added cubemap shadows for Vulkan
* Added basic SDF font support
* Added basic PBR without IBL
* Readded cubemap shadows for OpenGL
* Readded GUITest
* Readded GUI support
* Replaced SHADER_VULKAN_LIGHTING with SHADER_LIGHTING
* Replaced SHADER_VULKAN_LIGHTING_SKINNING with
  SHADER_LIGHTING_SKINNING

* Fixed bug: Defines added to shaders were added many times
* Fixed bug: Camera's 'useView' method would fail in Vulkan
             unless a graphics pipeline was bound

* Some cleanup

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 8

* Readded GUITest
* Readded GUI support

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 7

* Added basic PBR without IBL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 6

* Added basic SDF font support

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 5

* Added cubemap shadows for Vulkan

* Fixed bug: Geometry shaders were not loaded when using
             Vulkan

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 4

* Started adding cubemap shadows to Vulkan (not working yet)

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 3

* Readded cubemap shadows for OpenGL

* Fixed bug: Shader's 'outputCompleteShaderFiles' method
             missed geometry shaders

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 2

* Added basic geometry shader support for Vulkan

* Some cleanup

* Fixed bug: Camera's 'useView' method would fail in Vulkan
             unless a graphics pipeline was bound

-------------------------------------------------------------
Release 2 | Beta 1 | Development 4 | Experimental 1

* Replaced SHADER_VULKAN_LIGHTING with SHADER_LIGHTING
* Replaced SHADER_VULKAN_LIGHTING_SKINNING with
  SHADER_LIGHTING_SKINNING

* Fixed bug: Defines added to shaders were added many times

--------------------------------------------------------------
Release 2 | Beta 1 | Development 4 (V0.4.6)

* Added 'useView' method for Camera which should be used
  when things should be rendered according to that camera's
  point of view
* Added support for arrays of textures in Vulkan
* Added parameters in Shader methods to append "#define NAME"
  to the beginning of shaders before compilation when using
  Vulkan or OpenGL

* Readded shadow mapping for directional and spot lights

* Changed shadow mapping so 'lightSpaceMatrix' can be passed
  to the shader
* Changed Light to extend Camera3D instead of GameObject3D

* Some cleanup

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 8

* Some cleanup
* Added parameters in Shader methods to append "#define NAME"
  to the beginning of shaders before compilation when using
  Vulkan or OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 7

* Added support for arrays of textures in Vulkan

* Readded support for multiple shadow maps

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 6

* Readded spot light shadows

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 5

* Added 'useView' method for Camera which should be used
  when things should be rendered according to that camera's
  point of view
* Changed shadow mapping so 'lightSpaceMatrix' can be passed
  to the shader
* Changed Light to extend Camera3D instead of GameObject3D

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 4

* Fixed shadow mapping for OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 3

* Added shadow mapping for Vulkan (OpenGL broken)

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 2

* Readded shadow mapping for OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 3 | Experimental 1

* Missing shaders?

--------------------------------------------------------------
Release 2 | Beta 1 | Development 3 (V0.4.5)

* Added RenderPass
* Added Framebuffer
* Added 'renderOffscreen' method in BaseEngine

* Implemented basic offscreen rendering

* Rewrote FBO

* Renamed FramebufferStore to FramebufferAttachment

* Moved 'swapChainFramebuffers' from VulkanRenderPass to
  VulkanSwapChain

* Removed GeometryBuffer
* Removed VulkanRenderPass

* Fixed bug: Crash when trying to render an object without
             indices when using Vulkan
* Fixed bug: MSAA would not work when using Vulkan
* Fixed bug: 'depthWriteEnable' was incorrectly applied in
              GraphicsPipeline when using OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 8

* Some cleanup

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 7

* Added support for OpenGL in RenderPass
* Readded OpenGL support to FBO

* Fixed bug: 'depthWriteEnable' was incorrectly applied in
              GraphicsPipeline when using OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 6

* Fixed bug: MSAA would not work when using Vulkan

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 5

* Renamed FramebufferStore to FramebufferAttachment

* Removed VulkanRenderPass

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 4

* Added Framebuffer

* Moved 'swapChainFramebuffers' from VulkanRenderPass to
  VulkanSwapChain

* Started rewriting FBO

* Removed GeometryBuffer

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 3

* Added 'renderOffscreen' method in BaseEngine

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 2

* Implemented basic offscreen rendering

* Fixed bug: Crash when trying to render an object without
             indices when using Vulkan

-------------------------------------------------------------
Release 2 | Beta 1 | Development 2 | Experimental 1

* Added RenderPass

--------------------------------------------------------------
Release 2 | Beta 1 | Development 2 (V0.4.4)

* Began major rewrite of rendering system to integrate
  Vulkan better. This will involve temporary removal of many
  classes and features, eventually re-adding them later

* Added GraphicsPipeline
* Added GraphicsPipelineLayout
* Added utils_vulkan

* Changed Vulkan to perform queued descriptor set and UBOs
  updates after the update function, rather than at the end
  of a frame

* Moved RenderShader to a different file

* Replaced include guards with '#pragma once'

* Renamed ShaderBlock_Lighting struct to
  ShaderBlock_LightBatch in ShaderInterface
* Renamed ShaderBlock_Core struct to ShaderBlock_Camera in
  ShaderInterface

* Removed BaseEngineTest2D
* Removed BaseEngineTest3D
* Removed BaseTest3D
* Removed FramebufferTest3D
* Removed GUITest
* Removed PBRTest
* Removed PhysicsTest
* Removed SurfaceTest
* Removed TerrainTest
* Removed PBREnvironment
* Removed Particles
* Removed Tilemap
* Removed PostProcessing
* Removed CDLODTerrain
* Removed VulkanGraphicsPipeline
* Removed GraphicsState
* Removed TextureSet
* Removed examples folder

* Fixed bug: Font did not transition the texture it uses to
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL when
             using Vulkan
* Fixed bug: DescriptorSet did not delete the UBO's it created
* Fixed bug: ShaderInterface did not delete the
             DescriptorSetLayout's it created
* Fixed bug: Fullscreen windows using vsync was capped to
             60Hz even when a higher refresh rate monitor
			 was used

* Note: Now require a pipeline to render anything in Vulkan/
        OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 9

* Renamed RenderPipeline to GraphicsPipeline
* Renamed RenderPipelineLayout to GraphicsPipelineLayout

* Removed TextureSet

* Removed saving of bound textures in order to release them
  in Renderer (Now use descriptor sets)

* Fixed bug: Rendering models without texture coordinates
             would not work in Vulkan

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 8

* Readded skinning support

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 7

* Added ColourBlendState structure to RenderPipeline to
  change the blending state
* Added DepthState structure to RenderPipeline to change
 
* Readded many light support (forward rendering)

* Removed GraphicsState

* Fixed bug: Fullscreen windows using vsync was capped to
             60Hz even when a higher refresh rate monitor
			 was used
* Fixed bug: Text did not delete the pipeline used to render

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 6

* Readded text rendering support
* Readded basic lighting support

* Fixed bug: 'computeVertexInputData' in MeshData was
             incorrect when 'flags' was assignined

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 5

* Added method 'computeVertexInputData' in MeshData

* Readded skybox support

* Note: Now require a pipeline to render anything in Vulkan/
        OpenGL

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 4

* Added RenderPipeline
* Added RenderPipelineLayout
* Added utils_vulkan

* Moved RenderShader to a different file

* Renamed ShaderBlock_Core struct to ShaderBlock_Camera in
  ShaderInterface

* Removed VulkanGraphicsPipeline

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 3

* Began major rewrite of rendering system to integrate
  Vulkan better. This will involve temporary removal of many
  classes and features, eventually re-adding them later

* Replaced RenderScene with RenderSceneV2
* Replaced VulkanTest with VulkanTestV2

* Removed BaseEngineTest2D
* Removed BaseEngineTest3D
* Removed BaseTest3D
* Removed FramebufferTest3D
* Removed GUITest
* Removed PBRTest
* Removed PhysicsTest
* Removed SurfaceTest
* Removed TerrainTest
* Removed PBREnvironment
* Removed Particles
* Removed Tilemap
* Removed PostProcessing
* Removed CDLODTerrain
* Removed examples folder

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 2

* Changed Vulkan to perform queued descriptor set and UBOs
  updates after the update function, rather than at the end
  of a frame

* Renamed ShaderBlock_Lighting struct to
  ShaderBlock_LightBatch in ShaderInterface

-------------------------------------------------------------
Release 2 | Beta 1 | Development 1 | Experimental 1

* Added VulkanTestV2
* Added RenderSceneV2 in experimental folder

* Replaced include guards with '#pragma once'

* Fixed bug: Font did not transition the texture it uses to
             VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL when
             using Vulkan
* Fixed bug: DescriptorSet did not delete the UBO's it created
* Fixed bug: ShaderInterface did not delete the
             DescriptorSetLayout's it created

--------------------------------------------------------------
Release 2 | Beta 1 | Development 1 (V0.4.3)

* Added DescriptorSet
* Added DescriptorSetLayout
* Added basic support for layout(set) for Vulkan in shaders
  (Removed when using OpenGL)

* Changed shaders to use separate UBO for per-model data and
  added a descriptor set for this

* Replaced TextureSet with DescriptorSet in Material

-------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 8

* Some cleanup

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 7

* Fixed bug: Previous commit broke PBR rendering

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 6

* Changed shaders to use separate UBO for per-model data and
  added a descriptor set for this

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 5

* Fixed text when using Vulkan

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 4

* Added basic support for layout(set) for Vulkan in shaders
  (Removed when using OpenGL)
* Fixed some Vulkan and OpenGL from previous change

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 3

* Replaced TextureSet with DescriptorSet in material
  (Vulkan broken for now)

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 2

* Added methods to allow DescriptorSet to be updated when
  using Vulkan

--------------------------------------------------------------
Release 2 | Beta 1 | Development 0 | Experimental 1

* Added DescriptorSet
* Added DescriptorSetLayout

--------------------------------------------------------------
Release 2 | Beta 1 (V0.4.2)

* Added CSVFile
* Added DebugProfiler
* Added methods to MLAttribute to obtain data as a
  Vector2/3/4f
* Added method to remove a SubData from MeshData
* Added method to Sprite to obtain a specific collision
  rectangle for the sprite with certain applied offsets (like
  offsets in TextureAtlas)
* Added methods to assign the time of a Timer
* Added methods in MeshBuilder to build a wireframe quad
* Added 'updateTimeBetweenFrames' method in Animation2D
* Added screen space reflections for PBR deferred rendering
  in RenderScene
* Added bloom for PBR deferred rendering in RenderScene
* Added FXAA to RenderScene
* Added spot light shadows
* Added 'videoVulkan' setting to debug info

* Changed Sprite and TextureAnimation2D to allow multiple
  textures to be added as layers for when multiple textures
  should be rendered at the same time
* Changed MeshLoader to output the error text from Assimp if
  a file fails to load
* Changed Animation2D to use a Timer to work out the current
  frame (Should make behaviour better if the delta is very
  small or large)
* Changed PostProcessor to allow for rendering to multiple
  colour attachments
* Changed Light to update on creation if they cast shadows
* Change to VulkanTest to make OpenGL and Vulkan look similar

* Removed 'Offsets' from TextureAtlas
* Removed 'deltaSeconds' from Sprite

* Fixed bug: GUILabel would not work with a NULL font
* Fixed bug: utils_string::strSplit with a character for a
             delimeter behaved differently to the same method
             for a string type (if string's last letter was
             the given delimeter then it would not return an
             empty string for it)
* Fixed bug: Crash when loading a tilemap with Tilemap and
             TilemapLayer
* Fixed bug: Crash when updating Text with an empty string
* Fixed bug: Explicit instantiations of VBO should have been
             after the definitions in VBO.cpp
* Fixed bug: Using MSAA with Vulkan would cause a crash on
             some systems

--------------------------------------------------------------
Release 2 | Beta 0 | Development 3 (V0.4.2)

* Added DebugProfiler
* Added spot light shadows
* Added 'videoVulkan' setting to debug info

* Change to VulkanTest to make OpenGL and Vulkan look similar

* Fixed bug: Using MSAA with Vulkan would cause a crash on
             some systems

--------------------------------------------------------------
Release 2 | Beta 0 | Development 2 | Experimental 4

* Added DebugProfiler

--------------------------------------------------------------
Release 2 | Beta 0 | Development 2 | Experimental 3

* Added spot light shadows
* Added 'videoVulkan' setting to debug info

--------------------------------------------------------------
Release 2 | Beta 0 | Development 2 | Experimental 2

* Change to VulkanTest to make OpenGL and Vulkan look similar

--------------------------------------------------------------
Release 2 | Beta 0 | Development 2 | Experimental 1

* Fixed bug: Using MSAA with Vulkan would cause a crash on
             some systems

--------------------------------------------------------------
Release 2 | Beta 0 | Development 2 (V0.4.1)

* Added screen space reflections for PBR deferred rendering
  in RenderScene
* Added bloom for PBR deferred rendering in RenderScene
* Added FXAA to RenderScene

* Changed PostProcessor to allow for rendering to multiple
  colour attachments
* Changed Light to update on creation if they cast shadows

* Removed 'deltaSeconds' from Sprite

--------------------------------------------------------------
Release 2 | Beta 0 | Development 1 | Experimental 4

* Added FXAA to RenderScene

* Changed Light to update on creation if they cast shadows

--------------------------------------------------------------
Release 2 | Beta 0 | Development 1 | Experimental 3

* Cleanup of RenderScene

--------------------------------------------------------------
Release 2 | Beta 0 | Development 1 | Experimental 2

* Added bloom for PBR deferred rendering

* Changed PostProcessor to allow for rendering to multiple
  colour attachments

--------------------------------------------------------------
Release 2 | Beta 0 | Development 1 | Experimental 1

* Added screen space reflections for PBR deferred rendering
  in RenderScene

* Removed 'deltaSeconds' from Sprite

--------------------------------------------------------------
Release 2 | Beta 0 | Development 1 (V0.4.0)

* Added CSVFile
* Added methods to MLAttribute to obtain data as a
  Vector2/3/4f
* Added method to remove a SubData from MeshData
* Added method to Sprite to obtain a specific collision
  rectangle for the sprite with certain applied offsets (like
  offsets in TextureAtlas)
* Added methods to assign the time of a Timer
* Added methods in MeshBuilder to build a wireframe quad
* Added 'updateTimeBetweenFrames' method in Animation2D
* Changed Sprite and TextureAnimation2D to allow multiple
  textures to be added as layers for when multiple textures
  should be rendered at the same time
* Changed MeshLoader to output the error text from Assimp if
  a file fails to load
* Changed Animation2D to use a Timer to work out the current
  frame (Should make behaviour better if the delta is very
  small or large)

* Removed 'Offsets' from TextureAtlas

* Fixed bug: GUILabel would not work with a NULL font
* Fixed bug: utils_string::strSplit with a character for a
             delimeter behaved differently to the same method
             for a string type (if string's last letter was
             the given delimeter then it would not return an
             empty string for it)
* Fixed bug: Crash when loading a tilemap with Tilemap and
             TilemapLayer
* Fixed bug: Crash when updating Text with an empty string
* Fixed bug: Explicit instantiations of VBO should have been
             after the definitions in VBO.cpp

--------------------------------------------------------------
Release 2 | Beta 0 | Development 0 | Experimental 5

* Added methods to assign the time of a Timer
* Added methods in MeshBuilder to build a wireframe quad
* Added 'updateTimeBetweenFrames' method in Animation2D
* Changed Animation2D to use a Timer to work out the current
  frame (Should make behaviour better if the delta is very
  small or large)

--------------------------------------------------------------
Release 2 | Beta 0 | Development 0 | Experimental 4

* Changed MeshLoader to output the error text from Assimp if
  a file fails to load
* Fixed bug: Crash when loading a tilemap with Tilemap and
             TilemapLayer
* Fixed bug: Crash when updating Text with an empty string
* Fixed bug: Explicit instantiations of VBO should have been
             after the defininitions in VBO.cpp

--------------------------------------------------------------
Release 2 | Beta 0 | Development 0 | Experimental 3

* Fixed bug: Sprite's 'setVisibleLayers' wasn't working
             correctly

--------------------------------------------------------------
Release 2 | Beta 0 | Development 0 | Experimental 2

* Added method to remove a SubData from MeshData
* Added method to Sprite to obtain a specific collision
  rectangle for the sprite with certain applied offsets (like
  offsets in TextureAtlas)
* Changed Sprite and TextureAnimation2D to allow multiple
  textures to be added as layers for when multiple textures
  should be rendered at the same time
  
* Removed 'Offsets' from TextureAtlas

--------------------------------------------------------------
Release 2 | Beta 0 | Development 0 | Experimental 1

* Added CSVFile
* Added methods to MLAttribute to obtain data as a
  Vector2/3/4f

* Fixed bug: GUILabel would not work with a NULL font
* Fixed bug: utils_string::strSplit with a character for a
             delimeter behaved differently to the same method
             for a string type (if string's last letter was
             the given delimeter then it would not return an
             empty string for it)

--------------------------------------------------------------
Release 2 (V0.3.9)

* Added Sphere
* Added CDLODHeightMap
* Added CDLODQuadTreeNode
* Added CDLODTerrain
* Added HeightMapGenerator
* Added SimplexNoise
* Added GeometryBuffer
* Added PBREnvironment
* Added PlaneCollider3D
* Added Tilemap
* Added TilemapLayer
* Added AudioSequence
* Added ResourcePack
* Added FramebufferStoreCubemap
* Added Text
* Added UBO
* Added ShaderInterface
* Added Vulkan
* Added VulkanDevice
* Added VulkanExtensions
* Added VulkanSwapChain
* Added VulkanValidationLayers
* Added VulkanRenderPass
* Added VulkanGraphicsPipeline
* Added VulkanBuffer
* Added TextureSet
* Added GraphicsState
* Added method 'setMesh' in GameObject
* Added 'renderMode' to MeshData
* Added 'setupShader' to MeshRenderData
* Added 'AABBInFrustum' method in Frustum
* Added 'updateAnimation' in Mesh
* Added 'createTexture' method in Texture
* Added some getters and setters to DebugCamera
* Added convenience methods for setting the x, y and z
  positions of a transform/object separately
* Added an alternative constructor for FramebufferTexture
* Added deferred rendering in RenderScene3D
* Added geometry shader support in RenderShader for use with
  deferred rendering (used for the geometry pass)
* Added srgb setting in TextureParameters
* Added support for "../" in include paths for shaders
* Added loadTexturef in Texture to load textures with float
  data
* Added separate minFilter and magFilter properties in
  TextureParameters (when filter supplied both assigned)
* Added support for deferred PBR rendering using
  RenderScene3D
* Added option to use multisampled FBO's and PostProcessors
* Added methods in RenderScene3D to change the exposure
  and enable/disable gamma correction
* Added 'showDeferredBuffers' method in RenderScene3D
* Added methods to enable and disable wireframe rendering in
  RenderScene
* Added methods findAttribute and getAttribute in MLElement
* Added method strSplitLast in utils_string
* Added ability to read content in an element in MLDocument
* Added 'startFrame' to Animation2D
* Added 'getCurrentAnimationName' and 'getCurrentAnimation'
  to Sprite
* Added 'setTextureCoords' in Sprite
* Added 'roundNearest' in utils_maths
* Added 'Offsets' to TextureAtlas
* Added 'fadeIn' and 'fadeOut' methods to AudioSource and
  SoundSystem
* Added error messages in AudioLoader for files that don't
  exist
* Added 'setup' methods in Sprite
* Added error messages to SoundSystem
* Added point light shadows
* Added methods to Font that only update either the position
  that text will be rendered or the actual text to be rendered
* Added 'getCurrentFrameInAnimation' method in Animation2D
* Added 1440p to VideoResolution
* Added constructor in Matrix4f to initialise data from a
  Matrix3f
* Added 'videoVulkan' setting in Settings
* Added methods 'useMaterial' and 'stopUsingMaterial' in
  Renderer (Replacing 'setMaterialUniforms' method)
* Added methods 'outputCompleteShaderFile(s)' to Shader to
  write a whole shader file containing all includes
* Added 'compileToSPIRV'/'compileEngineShaderToSPIRV' methods
  to Shader to help compile engine shaders to SPIR-V (Requires
  glslangValidator)
* Added 'createQuad3D' method with a texture in MeshBuilder
* Added 'debugVkValidationLayersEnabled' in Settings
* Added function 'strJoin' to utils_string
* Added 'usingVulkan' method in BaseEngine
* Added warning messages and checks for updating
  MeshRenderData

* Changed default value of 'culling' in Mesh to false, and
  changed all models to assign this value to true
* Changed 'updateBones' to be prinvate in Skeleton
* Changed resources so that they remove themselves from their
  ResourceManager when deleted
* Changed getDelta() methods to be of type float to be
  more accurate
* Changed debugging settings to debug
* Changed ModelLoader to load diffuse textures as SRGB by
  default with the variable 'loadDiffuseTexturesAsSRGB' to
  change this when loading a model
* Changed Material structure to a class
* Changed saveTextures and releaseNewTextures in Renderer
  so that it can be called more than once to allow more than
  one state to be saved (releaseNewTextures will unbind the
  textures that were added since the last saveTextures call)
* Changed frustum culling for rendering shadow maps to be
  with the light's view frustum in RenderScene3D
* Changed vectors to work more like GLSL with Vector3f(0.0f)
  for example assigning all components in the vector to 0.0f
  instead of just the x one
* Changed MLParser to allow for closing an element on the
  same line
* Changed ML to allow it to read some XML files
* Changed 'entity' to 'sprite' in Animation2D
* Changed Camera2D to invert its position to make its
  movement more intuitive
* Changed Animation2D to reset the animation when starting
* Changed Sprite to set currentAnimation to NULL when it
  has finished running
* Changed 'update' method in Sprite to be overridable
* Changed TextureAnimation2D to assign the texture for the
  first frame of animation when it is started
* Changed 'loadShader' method in Shader to load a geometry
  shader if it is also available
* Changed Material so variables are no longer public (use
  methods to access instead) allowing faster transfer of data
  using UBO's
* Changed rendering system and shaders to use UBO's to assign
  the majority of data (This has increased the shader
  performance)
* Changed Renderer to only load shaders being used (can also
  use 'loadRenderShader' to load shaders manually)
* Changed MeshRenderData to assign specific attribute
  locations matching the ones defined in the shaders
* Changed shaders to use explicit locations (To make more
  compatible for compilation to SPIR-V)
* Changed MeshRenderData so 'setup' is not called and so must
  be done after creation (RenderData instance is now created
  in the constructor)
* Changed Material shaders to assign explicit binding locations
  for textures
* Changed Renderer to use texture units 10 and above when
  binding textures (to support old method of binding textures)
* Changed shader id's in Renderer to use unsigned integers
  instead of strings
* Changed 'loadEngineShader' in Renderer to load shaders for
  Vulkan in a separate folder 'shaders-vulkan'
* Changed 'videoVSync' in Settings to be an 'unsinged int'
  type so a value of 2 can be used to indicate triple
  buffering should be used (Vulkan)
* Changed 'setup' methods in RenderData to require a
  RenderShader instead of a Shader
* Changed 'initPerspective' in Matrix4f to return a
  different matrix when using Vulkan (so depth values are
  in the range 0-1 as Vulkan requires)
* Changed 'DEFAULT_CLAMP' in TextureParameters to be GL_REPEAT


* Cleaned up some shaders

* Improved accuracy of FPSLimiter
* Improved Audio to include loop intervals and a way to
  request a looping sound to stop
  
* Increased maximum number of bones in a model from 80 to 90

* Replaced all instances of std::map with std::unordered_map
  as the order was not necessary

* Renamed all utility namespaces from things like StrUtils
  to utils_string, and FileUtils to utils_file
* Renamed cutoff to innerCutoff in Light
* Renamed FramebufferTexture to FramebufferStore
* Renamed find to findChild in MLElement
* Renamed Sprite2D to Sprite
* Renamed 'timeBetweenFrame' to 'timeBetweenFrames' in
  Animation2D
  
* Removed 'shouldClamp' in TextureParameters (since default
  is GL_REPEAT anyway)
  
* Moved some of the shaders around

* Removed BoundingSphere structure (Replaced with sphere)
* Removed size parameter for SkyBox

* Fixed bug: Frustum culling did not take into account the
             scale of the object
* Fixed bug: Shadow's would repeat themselves if far enough
             away
* Fixed bug: DebugCamera was incorrectly calculating mouse
             movement
* Fixed bug: GUIDropDownMenu and hence GUIDropDownList did
             not assign added button's transform
* Fixed bug: Horizontal GUISlider did not work correctly
* Fixed bug: Matrix4f used half the value it should have for
             the fov
* Fixed bug: Shininess value was not loaded from materials
* Fixed bug: Was incorrectly calculating spot lights
* Fixed bug: Parallax disaplcement mapping was wrong when
             objects were rotated (seems like bitangents from
             assimp may be in the wrong direction)
* Fixed bug: Radius for the bounding sphere of a mesh was
             calculated incorrectly
* Fixed bug: MLDocument incorrectly delt with elements that
             were closed on the same line
* Fixed bug: TextureAtlas would not work properly with
             non-square textures
* Fixed bug: AudioLoader incorrectly loaded stereo sounds
* Fixed bug: Potential OpenAL crash upon failure to find a
             device
* Fixed bug: Font 'getWidth' could cause a segmentation fault
             with '\n' in the text
* Fixed bug: Font getHeight only measured the height of one
             line if \n was included
* Fixed bug: Rotations for skeletal animation weren't
             interpolated correctly
* Fixed bug: Depth sorting for particles ignored the last
  			 particle
* Fixed bug: Didn't delete 'vboOthers' in MeshRenderData
* Fixed bug: Fonth had overlapping glyphs in the bitmap
             resulting in lines appearing in text
* Fixed bug: Font didn't destroy the texture it created when
             it was destroyed
* Fixed bug: Didn't unbind depth buffer when creating a
             FramebufferStore
* Fixed bug: 'Renderer::destroy' was never called by
             BaseEngine
* Fixed bug: DebugCamera assigned 'A' and 'D' key bindings
             the wrong way round
* Fixed bug: Loaded RenderShaders were not destroyed by
             Renderer
* Fixed bug: Did not delete VBO's used for skinning in
             MeshRenderData

* Started adding Vulkan support
             
* Note: Text handles rendering of a Font instead of Font