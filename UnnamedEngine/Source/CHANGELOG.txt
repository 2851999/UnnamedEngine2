--------------------------------------------------------------
Release 1 | Beta 0 | Development 2 | Experimental 2

* Added support for more than one shadow map in a render
  scene batch
* Added an alternative constructor for FramebufferTexture
  
* Fixed bug: Frustum culling did not take into account the
             scale of the object
             
* Fixed bug: Shadow's would repeat themselves if far enough
             away

--------------------------------------------------------------
Release 1 | Beta 0 | Development 2 | Experimental 1

* Improved CDLODTerrain

* Added convenience methods for setting the x, y and z
  positions of a transform/object separately

--------------------------------------------------------------
Release 1 | Beta 0 | Development 2 (V0.2.5)

* Added CDLODHeightMap
* Added CDLODQuadTreeNode
* Added CDLODTerrain
* Added HeightMapGenerator
* Added SimplexNoise
* Added 'createTexture' method in Texture

* Changed resources so that they remove themselves from their
  ResourceManager when deleted

* Fixed bug: Not all resources were deleted when the engine
             stopped


--------------------------------------------------------------
Release 1 | Beta 0 | Development 1 | Experimental 3

* Added HeightMapGenerator
* Added SimplexNoise
* Added 'meshSize' to CDLODTerrain

* Changed resources so that they remove themselves from their
  ResourceManager when deleted
  
* Fixed bug: Not all resources were deleted when the engine
             stopped
* Fixed bug: CDLODTerrain didn't unbind the height map
             texture

--------------------------------------------------------------
Release 1 | Beta 0 | Development 1 | Experimental 2

* Added 'heightScale' in CDLODHeightMap

* Fixed bug: Maximum and minimum heights for the smallest
             CDLODQuadTreeNode's were not assigned correctly

--------------------------------------------------------------
Release 1 | Beta 0 | Development 1 | Experimental 1

* Added CDLODHeightMap
* Added CDLODQuadTreeNode
* Added CDLODTerrain
* Added 'createTexture' method in Texture

--------------------------------------------------------------
Release 1 | Beta 0 | Development 1 (V0.2.4)

* Added Sphere
* Added method 'setMesh' in GameObject
* Added 'renderMode' to MeshData
* Added 'setupShader' to MeshRenderData
* Added 'AABBInFrustum' method in Frustum
* Added 'updateAnimation' in Mesh
* Added some getters and setters to DebugCamera

* Changed default value of 'culling' in Mesh to false, and
  changed all models to assign this value to true
* Changed 'updateBones' to be prinvate in Skeleton

* Renamed all utility namespaces from things like StrUtils
  to utils_string, and FileUtils to utils_file

* Removed BoundingSphere structure (Replaced with sphere)

--------------------------------------------------------------
Release 1 | Beta 0 | Development 0 | Experimental 3

* Added 'AABBInFrustum' method in Frustum
* Added 'updateAnimation' in Mesh
* Added some getters and setters to DebugCamera

* Changed default value of 'culling' in Mesh to false, and
  changed all models to assign this value to true
* Changed 'updateBones' to be prinvate in Skeleton

--------------------------------------------------------------
Release 1 | Beta 0 | Development 0 | Experimental 2

* Added method 'setMesh' in GameObject
* Added 'renderMode' to MeshData
* Added 'setupShader' to MeshRenderData

--------------------------------------------------------------
Release 1 | Beta 0 | Development 0 | Experimental 1

* Added Sphere

* Renamed all utility namespaces from things like StrUtils
  to utils_string, and FileUtils to utils_file

* Removed BoundingSphere structure (Replaced with sphere)

--------------------------------------------------------------
Release 1 (V0.2.3)

* First release build of Unnamed Engine 2 (Still doesn't have
  a name)

--------------------------------------------------------------
Release 0 | Beta 5 (V0.2.3)

* Added BinaryFile
* Added enable and disable methods in KeyboardShortcuts
  (disabled by default)
  
* Changed GUITextBox to only have the KeyboardShortcuts
  instance enabled when it is selected
* Changed Timer to use an enum for its current state
* Changed MeshLoader to use BinaryFile to read/write
  
* Fixed bug: Couldn't change a text box's cursor's colour
* Fixed bug: Debugging info showed the music volume instead
             of the sound effect volume

--------------------------------------------------------------
Release 0 | Beta 4 | Development 1 (V0.2.3)

* Added BinaryFile
* Added enable and disable methods in KeyboardShortcuts
  (disabled by default)
  
* Changed GUITextBox to only have the KeyboardShortcuts
  instance enabled when it is selected
* Changed Timer to use an enum for its current state
* Changed MeshLoader to use BinaryFile to read/write
  
* Fixed bug: Couldn't change a text box's cursor's colour
* Fixed bug: Debugging info showed the music volume instead
             of the sound effect volume

--------------------------------------------------------------
Release 0 | Beta 4 | Development 0 | Experimental 3

* Fixed bug: Debugging info showed the music volume instead
             of the sound effect volume

--------------------------------------------------------------
Release 0 | Beta 4 | Development 0 | Experimental 2

* Added BinaryFile

* Changed Timer to use an enum for its current state
* Changed MeshLoader to use BinaryFile to read/write

--------------------------------------------------------------
Release 0 | Beta 4 | Development 0 | Experimental 1

* Added enable and disable methods in KeyboardShortcuts
  (disabled by default)
  
* Changed GUITextBox to only have the KeyboardShortcuts
  instance enabled when it is selected
  
* Fixed bug: Couldn't change a text box's cursor's colour

--------------------------------------------------------------
Release 0 | Beta 4 (V0.2.2)

* Added BoneAnimationData
* Added Bone
* Added Animation
* Added Skeleton
* Added MeshLoader
* Added 'wireframe' command to DebugConsole
* Added renderWithoutBinding method in RenderData
* Added SubData struct in RenderData
* Added the ability to have multiple meshes in a single VBO
* Added skeletal animation
* Added parallax occlusion mapping
* Added proper frustum culling of models added to a
  RenderScene3D instance
* Added method to pre-multiply a vector by a matrix
* Added constructor conversions between vectors of similar
  sizes
* Added SHADER_ constants in Renderer to represent various
  shader ID's
* Added translate and scale methods to Transform
* Added method to calculate and return the bounding sphere for
  a Mesh in MeshData
* Added 'path' to Texture to determine where textures have
  come from (if loaded from a specific location)
* Added custom model format
* Added method in MeshLoader to convert a model into the
  custom model format (currently uses .model file extension)
* Added culling setting in GameObject

* Changed Mesh to load a default colour of white if a
  material colour is not defined
* Changed Mesh to load the normal map as a height map from
  an OBJ file
* Changed shaders to use #map duplicates to replace the
  previous assignment
* Changed shadows to work with skeletal animation
* Changed FrustumPlane to a structure
* Changed Shader to store attached shaders in a vector
* Changed light to calculate the projection view matrix when
  update is called
* Changed font to work in 3D without bill-boarding being
  applied
* Changed splash screen to be white background with black text
  (Also now deletes the resources used to produce it)
  
* Moved Frustum.h to core
* Moved the SubData structure to MeshData

* Renamed loadModel to loadAssimpModel

* Rewritten Frustum class

* Removed errors from shaders when a uniform/attribute is
  not found as many of these occur when the compiler
  removed unnecessary variables
  
* Fixed bug: Trying to get the inverse of a Matrix3f with a
             determinant of 0 would cause a crash
* Fixed bug: Pasting text into a text box with new line
             characters caused the text to render incorrectly
* Fixed bug: Models didn't always have the correct orientation
* Fixed bug: Shadows would render properly in certain
             circumstances
* Fixed bug: Transform didn't update its position, rotation
             and scale when a new parent transform was
             assigned
* Fixed bug: getForward in Quaternion returned a vector
             pointing the wrong way (As OpenGL has -Z into
             the screen)
             
* Note: At the moment any loaded models assume the file being
        loaded only has one model within it
 
* More shader cleanup

--------------------------------------------------------------
Release 0 | Beta 3 | Development 5 (V0.2.2)

* Added genNormals option in loadAssimpModel and
  convertToEngineModel

* Changed font to work in 3D without bill-boarding being
  applied
* Changed splash screen to be white background with black text
  (Also now deletes the resources used to produce it)

--------------------------------------------------------------
Release 0 | Beta 3 | Development 4 | Experimental 2

* Changed splash screen to be white background with black text
  (Also now deletes the resources used to produce it)

--------------------------------------------------------------
Release 0 | Beta 3 | Development 4 | Experimental 1

* Added genNormals option in loadAssimpModel and
  convertToEngineModel

* Changed font to work in 3D without bill-boarding being
  applied

--------------------------------------------------------------
Release 0 | Beta 3 | Development 4 (V0.2.1)

* Added MeshLoader
* Added 'path' to Texture to determine where textures have
  come from (if loaded from a specific location)
* Added custom model format
* Added method in MeshLoader to convert a model into the
  custom model format (currently uses .model file extension)
* Added culling setting in GameObject
  
* Changed light to calculate the projection view matrix when
  update is called

* Renamed loadModel to loadAssimpModel

--------------------------------------------------------------
Release 0 | Beta 3 | Development 3 | Experimental 3

* Added method in MeshLoader to convert a model into the
  custom engine format
* Added support for other numbers of dimensions in the model
  format
* Added culling setting in GameObject
  
* Changed light to calculate the projection view matrix when
  update is called

--------------------------------------------------------------
Release 0 | Beta 3 | Development 3 | Experimental 2

* Added saving/loading of a custom model format (currently
  uses .model file extension)

* Renamed loadModel to loadAssimpModel

--------------------------------------------------------------
Release 0 | Beta 3 | Development 3 | Experimental 1

* Added MeshLoader
* Added 'path' to Texture to determine where textures have
  come from (if loaded from a specific location)
  
* Started adding a custom model format

--------------------------------------------------------------
Release 0 | Beta 3 | Development 3 (V0.2.0)

* Added proper frustum culling of models added to a
  RenderScene3D instance
* Added method to pre-multiply a vector by a matrix
* Added constructor conversions between vectors of similar
  sizes
* Added SHADER_ constants in Renderer to represent various
  shader ID's
* Added translate and scale methods to Transform
* Added method to calculate and return the bounding sphere for
  a Mesh in MeshData

* Changed FrustumPlane to a structure
* Changed Shader to store attached shaders in a vector

* Moved Frustum.h to core

* Rewritten Frustum class

* Fixed bug: Transform didn't update its position, rotation
             and scale when a new parent transform was
             assigned
* Fixed bug: getForward in Quaternion returned a vector
             pointing the wrong way (As OpenGL has -Z into
             the screen)

--------------------------------------------------------------
Release 0 | Beta 3 | Development 2 | Experimental 4

* Added method to calculate and return the bounding sphere for
  a Mesh in MeshData

* Changed Shader to store attached shaders in a vector

--------------------------------------------------------------
Release 0 | Beta 3 | Development 2 | Experimental 3

* Moved Frustum.h and Frustum.cpp to core

* Fixed bug: getForward in Quaternion returned a vector
             pointing the wrong way (As OpenGL has -Z into
             the screen)

--------------------------------------------------------------
Release 0 | Beta 3 | Development 2 | Experimental 2

* Added SHADER_ constants in Renderer to represent various
  shader ID's
* Added translate and scale methods to Transform
  
* Moved centre and radius from MeshData to Mesh

* Fixed bug: Transform didn't update its position, rotation
             and scale when a new parent transform was
             assigned

--------------------------------------------------------------
Release 0 | Beta 3 | Development 2 | Experimental 1

* Added proper frustum culling of models added to a
  RenderScene3D instance
* Added method to pre-multiply a vector by a matrix
* Added constructor conversions between vectors of similar
  sizes

* Changed FrustumPlane to a structure

* Rewritten Frustum class

--------------------------------------------------------------
Release 0 | Beta 3 | Development 2 (V0.1.9)

* Added parallax occlusion mapping

* Changed shaders to use #map duplicates to replace the
  previous assignment
* Changed shadows to work with skeletal animation

* Removed errors from shaders when a uniform/attribute is
  not found as many of these occur when the compiler
  removed unnecessary variables
  
* Fixed bug: Shadows would render properly in certain
             circumstances
             
* More shader cleanup

--------------------------------------------------------------
Release 0 | Beta 3 | Development 1 | Experimental 4

* Added parallax occlusion mapping

--------------------------------------------------------------
Release 0 | Beta 3 | Development 1 | Experimental 3

* More shader cleanup

--------------------------------------------------------------
Release 0 | Beta 3 | Development 1 | Experimental 2

* Removed errors from shaders when a uniform/attribute is
  not found as many of these occur when the compiler
  removed unnecessary variables

* More shader cleanup

--------------------------------------------------------------
Release 0 | Beta 3 | Development 1 | Experimental 1

* Changed shaders to use #map duplicates to replace the
  previous assignment
* Changed shadows to work with skeletal animation
  
* Fixed bug: Shadows would render properly in certain
             circumstances
             
* More shader cleanup

--------------------------------------------------------------
Release 0 | Beta 3 | Development 1 (V0.1.8)

* Added BoneAnimationData
* Added Bone
* Added Animation
* Added Skeleton
* Added 'wireframe' command to DebugConsole
* Added renderWithoutBinding method in RenderData
* Added SubData struct in RenderData
* Added the ability to have multiple meshes in a single VBO
* Added skeletal animation

* Changed Mesh to load a default colour of white if a
  material colour is not defined
* Changed Mesh to load the normal map as a height map from
  an OBJ file
  
* Moved the SubData structure to MeshData
  
* Fixed bug: Trying to get the inverse of a Matrix3f with a
             determinant of 0 would cause a crash
* Fixed bug: Pasting text into a text box with new line
             characters caused the text to render incorrectly
* Fixed bug: Models didn't always have the correct orientation
             
* Note: At the moment any loaded models assume the file being
        loaded only has one model within it

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 10

* Changed lights to have a default quadratic attenuation of 1

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 9

* Fixed bug: Models didn't always have the correct orientation

* More skeletal animation

* Note: At the moment any loaded models assume the file being
        loaded only has one model within it
        
--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 8

* More skeletal animation

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 7

* Fixed bug: Vector's lerp and nlerp methods were incorrect

* More skeletal animation

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 6

* More development of skeletal animation

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 5

* Added BoneAnimationData
* Added Bone
* Added Animation
* Added Skeleton

* Better animated model loading (Work in progress)

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 4

* Changed Mesh to load the normal map as a height map from
  an OBJ file
  
* Fixed bug: Animations didn't work quite right (scale
             was being searched for instead of position)

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 3

* Added skeletal animation (Work in progress)

* Changed Mesh to load a default colour of white if a
  material colour is not defined
  
* Fixed bug: Trying to get the inverse of a Matrix3f with a
             determinant of 0 would cause a crash
* Fixed bug: Pasting text into a text box with new line
             characters caused the text to render incorrectly

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 2

* Moved the SubData structure to MeshData

--------------------------------------------------------------
Release 0 | Beta 3 | Development 0 | Experimental 1

* Added 'wireframe' command to DebugConsole
* Added renderWithoutBinding method in RenderData
* Added SubData struct in RenderData
* Added the ability to have multiple meshes in a single VBO

--------------------------------------------------------------
Release 0 | Beta 3 (V0.1.7)

* Added Animation2D
* Added TextureAnimation2D
* Added Sprite2D
* Added Quaternion
* Added Transform
* Added DebugConsole
* Added multi-line comments in ML
* Added time stamps to logs
* Added method in InputManager to add all available
  controllers
* Added the ability to make the Logger output to a file
* Added a way to invert the controller axis in
  InputBindingAxis
* Added abs method in MathsUtils
* Added support for dead zones in InputBindingAxis
* Added method in InputManager to check whether a controller
  with a specific index has been added
* Added maximum and minimum values for a GUISlider (default
  is 0 and 1)
* Added the method clampToClosestInterval in MathsUtils
* Added replaceAll method in StrUtils
* Added lerp, slerp and nlerp methods in Vector
* Added normalised method in Vector
* Added doesExist, isFile and isDirectory to FileUtils
* Added find method in MLElement
* Added writeToDocument and readFromDocument methods in
  SettingsUtils
* Added save and load methods in InputBindings with an
  MLDocument as a parameter

* Changed Logger to be a class instead of a namespace
* Changed RenderData so non-instanced rendering only occurs
  when primcount = -1, which it is set to by default
* Changed public variables in TextureAtlas to be private
* Changed Material from a class to a structure
* Changed the position, rotation and velocity variables to
  private in AudioObject
* Changed the default TextureParameters for a font
* Changed objects to use the new 'Transform' class
* Changed audio system to use the new 'Transform' class and
  quaternions
  
* Renamed FPSLimiter's methods start/update to startFrame/
  endFrame
* Renamed getRel methods to getLocal

* Removed the MeshData* parameter in some of the update
  methods in MeshRenderData
* Removed top, bottom, left and right variables from Texture

* Fixed bug: FPSLimiter didn't work properly when VSync was
             enabled
* Fixed bug: InputBindings would sometimes create a new
			 controller instance when it wasn't supposed to
* Fixed bug: Random controller noise could assign an
             InputBindingAxis - this also improves assignment
             making it harder to accidentally assign the
             wrong axis
* Fixed bug: ParticleEmitter could emit too many particles
             when using the emitParticles method
* Fixed bug: RenderData still rendered a mesh, even when
             the number of instances was supposed to be 0
* Fixed bug: GUISlider didn't assign the value correctly
             when using an interval
* Fixed bug: TextureAtlas wouldn't work if numRows didn't
			 equal numColumns
* Fixed bug: InputBindings caused a crash if a controller
  			 was not found
* Fixed bug: InputBindings would still load the controller
             data from a file, even if the controller wasn't
             found
* Fixed bug: Setting the flying value to false in Camera3D
             didn't do anything

* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 4 (V0.1.7)

* Added DebugConsole
* Added lerp, slerp and nlerp methods in Vector
* Added normalised method in Vector
* Added some init methods in Quaternion
* Added doesExist, isFile and isDirectory to FileUtils
* Added find method in MLElement
* Added writeToDocument and readFromDocument methods in
  SettingsUtils
* Added save and load methods in InputBindings with an
  MLDocument as a parameter
* Added Quaternion * Vector3f method

* Removed addChild in Transform and replaced all occurrences
  with setParent instead
  
* Fixed bug: Setting the flying value to false in Camera3D
             didn't do anything
* Fixed bug: Assigning the parent of a transform wouldn't
             update the position, rotation and scale
* Fixed bug: GUIBorder didn't render in the correct place

--------------------------------------------------------------
Release 0 | Beta 2 | Development 3 | Experimental 3

* Renamed getRel methods in PhysicsObject2D/3D to getLocal

* Some shader cleanup

--------------------------------------------------------------
Release 0 | Beta 2 | Development 3 | Experimental 2

* Added DebugConsole
* Added find method in MLElement
* Added writeToDocument and readFromDocument methods in
  SettingsUtils
* Added save and load methods in InputBindings with an
  MLDocument as a parameter
* Added Quaternion * Vector3f method

* Fixed bug: Assigning the parent of a transform wouldn't
             update the position, rotation and scale
* Fixed bug: GUIBorder didn't render in the correct place

--------------------------------------------------------------
Release 0 | Beta 2 | Development 3 | Experimental 1

* Added lerp, slerp and nlerp methods in Vector
* Added normalised method in Vector
* Added some init methods in Quaternion
* Added doesExist, isFile and isDirectory to FileUtils

* Removed addChild in Transform and replaced all occurrences
  with setParent instead
  
* Fixed bug: Setting the flying value to false in Camera3D
             didn't do anything

--------------------------------------------------------------
Release 0 | Beta 2 | Development 3 (V0.1.6)

* Added Quaternion
* Added Transform
* Added maximum and minimum values for a GUISlider (default
  is 0 and 1)
* Added the method clampToClosestInterval in MathsUtils
* Added replaceAll method in StrUtils

* Changed Material from a class to a structure
* Changed the position, rotation and velocity variables to
  private in AudioObject
* Changed the default TextureParameters for a font
* Changed objects to use the new 'Transform' class
* Changed audio system to use the new 'Transform' class and
  quaternions

* Renamed FPSLimiter's methods start/update to startFrame/
  endFrame
* Renamed getRel methods to getLocal

* Removed top, bottom, left and right variables from Texture

* Fixed bug: GUISlider didn't assign the value correctly
             when using an interval
* Fixed bug: TextureAtlas wouldn't work if numRows didn't
			 equal numColumns
* Fixed bug: InputBindings caused a crash if a controller
  			 was not found
* Fixed bug: InputBindings would still load the controller
             data from a file, even if the controller wasn't
             found

* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 11

* Changed audio system to use the new transform class and
  quaternions

* Fixed bug: Incorrect audio positions

* More quaternions

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 10

* More quaternions

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 9

* More quaternions

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 8

* Now using new 'Transformation' class for transformations
  of 2D objects

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 7

* Added Transform

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 6

* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 5

* Added replaceAll method in StrUtils

* Changed InputBindings so it would still load the controller
  data from a file, even if the controller wasn't found
* Changed the default TextureParameters for a font

* Renamed FPSLimiter's methods start/update to startFrame/
  endFrame

* Fixed bug: InputBindings caused a crash if a controller
  was not found
  
* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 4

* Changed the position, rotation and velocity variables to
  private in AudioObject

* Fixed bug: TextureAtlas wouldn't work if numRows didn't
			 equal numColumns
			 
* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 3

* Changed Material from a class to a structure

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 2

* Added Quaternion

* Removed top, bottom, left and right variables from Texture

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 | Experimental 1

* Added maximum and minimum values for a GUISlider (default
  is 0 and 1)
* Added the method clampToClosestInterval in MathsUtils

* Fixed bug: GUISlider didn't assign the value correctly
             when using an interval

--------------------------------------------------------------
Release 0 | Beta 2 | Development 2 (V0.1.5)

* Added Animation2D
* Added TextureAnimation2D
* Added Sprite2D
* Added a way to invert the controller axis in
  InputBindingAxis
* Added abs method in MathsUtils
* Added support for dead zones in InputBindingAxis
* Added method in InputManager to check whether a controller
  with a specific index has been added
  
* Changed RenderData so non-instanced rendering only occurs
  when primcount = -1, which it is set to by default
* Changed public variables in TextureAtlas to be private
  
* Removed the MeshData* parameter in some of the update
  methods in MeshRenderData

* Fixed bug: Random controller noise could assign an
             InputBindingAxis - this also improves assignment
             making it harder to accidentally assign the
             wrong axis
* Fixed bug: ParticleEmitter could emit too many particles
             when using the emitParticles method
* Fixed bug: RenderData still rendered a mesh, even when
             the number of instances was supposed to be 0
  
* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 1 | Experimental 3

* Added Animation2D
* Added TextureAnimation2D
* Added Sprite2D

* Changed public variables in TextureAtlas to be private

* Removed the MeshData* parameter in some of the update
  methods in MeshRenderData

--------------------------------------------------------------
Release 0 | Beta 2 | Development 1 | Experimental 2

* Added method in InputManager to check whether a controller
  with a specific index has been added
  
* Changed RenderData so non-instanced rendering only occurs
  when primcount = -1, which it is set to by default
  
* Fixed bug: ParticleEmitter could emit too many particles
             when using the emitParticles method
* Fixed bug: RenderData still rendered a mesh, even when
             the number of instances was supposed to be 0
             
* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 1 | Experimental 1

* Added a way to invert the controller axis in
  InputBindingAxis
* Added abs method in MathsUtils
* Added support for dead zones in InputBindingAxis

* Fixed bug: Random controller noise could assign an
             InputBindingAxis - this also improves assignment
             making it harder to accidentally assign the
             wrong axis
  
* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 1 (V0.1.4)

* Added multi-line comments in ML
* Added time stamps to logs
* Added method in InputManager to add all available
  controllers
* Added the ability to make the Logger output to a file

* Changed Logger to be a class instead of a namespace

* Fixed bug: FPSLimiter didn't work properly when VSync was
             enabled
* Fixed bug: InputBindings would sometimes create a new
			 controller instance when it wasn't supposed to

* Note: Started shader cleanup

* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 0 | Experimental 4

* Added the ability to make the Logger output to a file

* Changed Logger to be a class instead of a namespace

--------------------------------------------------------------
Release 0 | Beta 2 | Development 0 | Experimental 3

* Added method in InputManager to add all available
  controllers

* Fixed bug: InputBindings would sometimes create a new
			 controller instance when it wasn't supposed to

* More Asteroids development

--------------------------------------------------------------
Release 0 | Beta 2 | Development 0 | Experimental 2

* Added multi-line comments in ML
* Added time stamps to logs

--------------------------------------------------------------
Release 0 | Beta 2 | Development 0 | Experimental 1

* Fixed bug: FPSLimiter didn't work properly when VSync was
             enabled

* Note: Started shader cleanup